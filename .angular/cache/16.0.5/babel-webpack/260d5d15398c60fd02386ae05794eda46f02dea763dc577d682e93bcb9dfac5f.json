{"ast":null,"code":"// import { Component, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { getLogin } from '../modules/redux/actions/login.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/api.service\";\nimport * as i3 from \"@ngrx/store\";\nclass FormComponent {\n  constructor(formBuilder, apiService, store) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.store = store;\n  }\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    });\n    // this.store?.dispatch(getLogin());\n    // this.store?.select(selectLogin)?.subscribe((config) => {\n    //   console.log(config)\n    //     // this.adConfig = JSON.parse(JSON.stringify(config))\n    //     // if (this.byPassLogin === 'true' || this.byPassLogin === true) {\n    //     //     this.adConfig['authProvider'] = {\n    //     //         ...this.adConfig['authProvider'],\n    //     //         name: 'jwt'\n    //     //     }\n    //     // }\n    // });\n  }\n\n  submitForm() {\n    this.apiService.api().subscribe(response => {\n      console.log('API call successful', response);\n    }, error => {\n      console.log('API call failed', error);\n    });\n    if (this.myForm.valid) {\n      const formValue = this.myForm.value;\n      console.log(formValue); // Handle form data\n    }\n\n    this.store.dispatch(getLogin());\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Store));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [\"type\", \"submit\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"form[_ngcontent-%COMP%] {\\n  margin-top: 300px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%] {\\n  padding: 8px;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n  width: 250px;\\n}\\n\\nbutton[type=submit][_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  background-color: #007bff;\\n  color: #fff;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\nbutton[type=submit][_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZm9ybS9mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVFO0VBQ0UsbUJBQUE7QUFDSjs7QUFFRTtFQUNFLGNBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVFOztFQUVFLFlBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUVFO0VBQ0Usa0JBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FBQ0o7O0FBRUU7RUFDRSx5QkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XHJcbiAgICBtYXJnaW4tdG9wOiAzMDBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgZGl2IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl0ge1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIHdpZHRoOiAyNTBweDtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICBidXR0b25bdHlwZT1cInN1Ym1pdFwiXTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { FormComponent };","map":{"version":3,"names":["Validators","getLogin","FormComponent","constructor","formBuilder","apiService","store","ngOnInit","myForm","group","name","required","email","submitForm","api","subscribe","response","console","log","error","valid","formValue","value","dispatch","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","i3","Store","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","FormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\maria\\OneDrive\\Desktop\\new-lite\\AngularTesting\\src\\app\\form\\form.component.ts","C:\\Users\\maria\\OneDrive\\Desktop\\new-lite\\AngularTesting\\src\\app\\form\\form.component.html"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from '../service/api.service';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AppState } from '../modules/redux/app.state';\r\nimport { getLogin } from '../modules/redux/actions/login.action';\r\nimport { selectLogin } from '../modules/redux/selectors/login.selector';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss']\r\n})\r\nexport class FormComponent implements OnInit{\r\n  myForm!: FormGroup ;\r\n\r\n  constructor(private formBuilder: FormBuilder, private apiService: ApiService, private store: Store<AppState>) {}\r\n\r\n  ngOnInit() {\r\n    this.myForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n    // this.store?.dispatch(getLogin());\r\n    // this.store?.select(selectLogin)?.subscribe((config) => {\r\n    //   console.log(config)\r\n    //     // this.adConfig = JSON.parse(JSON.stringify(config))\r\n    //     // if (this.byPassLogin === 'true' || this.byPassLogin === true) {\r\n    //     //     this.adConfig['authProvider'] = {\r\n    //     //         ...this.adConfig['authProvider'],\r\n    //     //         name: 'jwt'\r\n    //     //     }\r\n    //     // }\r\n    // });\r\n\r\n    \r\n}\r\n\r\n\r\n  \r\n\r\n  submitForm() {\r\n    this.apiService.api()\r\n    .subscribe(\r\n      (response : any) => {\r\n        console.log('API call successful', response);\r\n      },\r\n      (error : any) => {\r\n        console.log('API call failed', error);\r\n      }\r\n    );\r\n    if (this.myForm.valid) {\r\n      const formValue = this.myForm.value;\r\n      console.log(formValue); // Handle form data\r\n    }\r\n    this.store.dispatch(getLogin());\r\n   \r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"myForm\" (ngSubmit)=\"submitForm()\">\r\n    <div>\r\n      <label for=\"name\">Name:</label>\r\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\r\n    </div>\r\n    <div>\r\n      <label for=\"email\">Email:</label>\r\n      <input type=\"email\" id=\"email\" formControlName=\"email\">\r\n    </div>\r\n    <button type=\"submit\">Submit</button>\r\n  </form>\r\n  "],"mappings":"AAAA;AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAInE,SAASC,QAAQ,QAAQ,uCAAuC;;;;;AAKhE,MAKaC,aAAa;EAGxBC,YAAoBC,WAAwB,EAAUC,UAAsB,EAAUC,KAAsB;IAAxF,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,UAAU,GAAVA,UAAU;IAAsB,KAAAC,KAAK,GAALA,KAAK;EAAoB;EAE/GC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACnCC,IAAI,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACY,KAAK,CAAC;KACpD,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAGJ;;EAKEC,UAAUA,CAAA;IACR,IAAI,CAACR,UAAU,CAACS,GAAG,EAAE,CACpBC,SAAS,CACPC,QAAc,IAAI;MACjBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ,CAAC;IAC9C,CAAC,EACAG,KAAW,IAAI;MACdF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,KAAK,CAAC;IACvC,CAAC,CACF;IACD,IAAI,IAAI,CAACX,MAAM,CAACY,KAAK,EAAE;MACrB,MAAMC,SAAS,GAAG,IAAI,CAACb,MAAM,CAACc,KAAK;MACnCL,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC,CAAC,CAAC;;;IAE1B,IAAI,CAACf,KAAK,CAACiB,QAAQ,CAACtB,QAAQ,EAAE,CAAC;EAGjC;;AA7CWC,aAAa,C;mBAAbA,aAAa,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,KAAA;AAAA;AAAb7B,aAAa,C;QAAbA,aAAa;EAAA8B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCf1Bd,EAAA,CAAAgB,cAAA,cAAqD;MAA1BhB,EAAA,CAAAiB,UAAA,sBAAAC,gDAAA;QAAA,OAAYH,GAAA,CAAA1B,UAAA,EAAY;MAAA,EAAC;MAChDW,EAAA,CAAAgB,cAAA,UAAK;MACehB,EAAA,CAAAmB,MAAA,YAAK;MAAAnB,EAAA,CAAAoB,YAAA,EAAQ;MAC/BpB,EAAA,CAAAqB,SAAA,eAAoD;MACtDrB,EAAA,CAAAoB,YAAA,EAAM;MACNpB,EAAA,CAAAgB,cAAA,UAAK;MACgBhB,EAAA,CAAAmB,MAAA,aAAM;MAAAnB,EAAA,CAAAoB,YAAA,EAAQ;MACjCpB,EAAA,CAAAqB,SAAA,eAAuD;MACzDrB,EAAA,CAAAoB,YAAA,EAAM;MACNpB,EAAA,CAAAgB,cAAA,gBAAsB;MAAAhB,EAAA,CAAAmB,MAAA,cAAM;MAAAnB,EAAA,CAAAoB,YAAA,EAAS;;;MATnCpB,EAAA,CAAAsB,UAAA,cAAAP,GAAA,CAAA/B,MAAA,CAAoB;;;;;;SDebN,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}