{"ast":null,"code":"import _asyncToGenerator from \"/home/protecto/Documents/Angular-Latest-Testing/AngularTesting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./service/api.service\";\nclass AuthGuard {\n  constructor(router, apiService) {\n    this.router = router;\n    this.apiService = apiService;\n    this.canActivate();\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.apiService.api().subscribe(response => {\n        console.log('API call successful', response.success);\n      }, error => {\n        console.log('API call failed', error);\n      });\n      return false;\n    })();\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ApiService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","router","apiService","canActivate","_this","_asyncToGenerator","api","subscribe","response","console","log","success","error","i0","ɵɵinject","i1","Router","i2","ApiService","factory","ɵfac","providedIn"],"sources":["/home/protecto/Documents/Angular-Latest-Testing/AngularTesting/src/app/auth.guard.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ApiService } from './service/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private apiService: ApiService) { \n    this.canActivate();\n  }\n\n\n  async canActivate(): Promise<boolean> {\n\n    this.apiService.api()\n    .subscribe(\n      (response : any) => {\n        console.log('API call successful', response.success);\n      },\n      (error : any) => {\n        console.log('API call failed', error);\n      }\n    );\n\n    return false;\n  }\n}\n"],"mappings":";;;;AAKA,MAGaA,SAAS;EAEpBC,YAAoBC,MAAc,EAAUC,UAAsB;IAA9C,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,UAAU,GAAVA,UAAU;IACpD,IAAI,CAACC,WAAW,EAAE;EACpB;EAGMA,WAAWA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAEfD,KAAI,CAACF,UAAU,CAACI,GAAG,EAAE,CACpBC,SAAS,CACPC,QAAc,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ,CAACG,OAAO,CAAC;MACtD,CAAC,EACAC,KAAW,IAAI;QACdH,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,KAAK,CAAC;MACvC,CAAC,CACF;MAED,OAAO,KAAK;IAAC;EACf;;AApBWb,SAAS,C;mBAATA,SAAS,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;AAATnB,SAAS,C;SAATA,SAAS;EAAAoB,OAAA,EAATpB,SAAS,CAAAqB,IAAA;EAAAC,UAAA,EAFR;AAAM;SAEPtB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}